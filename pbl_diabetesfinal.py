# -*- coding: utf-8 -*-
"""PBL_DiabetesFinal.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1IpgIYr-Vhc95CbLqkOEK78A8P8njEYoE
"""

import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score

dataset = pd.read_csv(r'https://github.com/Yantra-Byte/Dataset/raw/main/Diabetes.csv')

dataset.head()

dataset.tail()

dataset.shape

dataset.info()

dataset.isnull().sum()

dataset.describe()

dataset['diabetes'].value_counts()

X = dataset.drop(columns='diabetes',axis=1)

y = dataset['diabetes']

X

y

"""#Declaring Training and Testing Data"""

X_train, X_test, y_train, y_test = train_test_split(X, y, train_size=0.6, random_state = 250)

X_train.shape, X_test.shape, y_train.shape, y_test.shape

"""#Logistic Regression"""

model = LogisticRegression()

"""Training the LogisticRegression model with training data"""

model.fit(X_train, y_train)

"""#Model Evaluation

Accuracy score

Accuracy on training data
"""

X_train_pred = model.predict(X_train)
trainingData_accuracy = accuracy_score(X_train_pred, y_train)
print("Accuracy on Training Data : ", trainingData_accuracy)

"""Accuracy on test data"""

X_test_pred = model.predict(X_test)
testData_accuracy = accuracy_score(X_test_pred, y_test)
print("Accuracy on Test Data : ", testData_accuracy)

"""#Building a Predictive System"""

inputData = (1,138,42,36,170,45.1,2.050,35)

"""Change input data to numpy array"""

inputDataNumpyArray = np.asarray(inputData)

"""Reshape the numpy array as we are predicting for only one instance"""

inputDataReshaped = inputDataNumpyArray.reshape(1,-1)

prediction = model.predict(inputDataReshaped)
print(prediction)

if (prediction[0]==0):
  print("The patient doesn't have Diabetes. ")
else:
  print("The patient is Diabetic. ")

